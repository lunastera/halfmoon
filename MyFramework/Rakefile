# encoding: utf-8

namespace :db do
  task :require_config do
    require 'halfmoon/config'
    require_relative './app/config/config'
  end

  task :require_model do
    require 'halfmoon/db'
    require 'halfmoon/migration'
  end

  desc 'MigrationファイルからDBを操作'
  task :migration, ['table', 'method'] => [:require_config, :require_model] do |_, args|
    require_relative "./app/db/migration/#{args[:table]}_migration.rb"
    klass = "#{args[:table].capitalize}Migration"
    begin
      Kernel.const_get(klass).new.send(args[:method].to_sym)
    rescue NoMethodError
      puts "undefined method `#{args[:method]}` for #{klass}."
      exit(1)
    end
  end

  desc 'seed.rbからDBを初期化'
  task seed: [:require_config] do |_, args|
    require 'halfmoon/db'
    require 'sequel'
    @db = HalfMoon::Database.connect
    files = Dir.glob("#{Config[:root]}#{Config[:model_path]}*.rb")
    files.each do |file|
      const_name = file.split('/').last.capitalize.gsub(/\.rb$/, '')
      autoload const_name, file
    end
    require_relative './app/db/seeds.rb'
  end
end
